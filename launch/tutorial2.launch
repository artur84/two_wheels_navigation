<launch>
	<!-- Some general parameters -->
	<param name="use_sim_time" value="true" />
	<rosparam file="$(find two_wheels_navigation)/param/ros.yaml"/>

	<!-- Add a necessary transformation to link odom and base_link frames -->
    <node pkg="tf" type="static_transform_publisher" name="foot_to_base" args="0 0 0 0 0 0    base_footprint base_link 30" />

    <!-- Odometry node -->
    <include file="$(find two_wheels_navigation)/launch/odometry.launch"/>


	<!-- Start the Operator to control the simulated robot -->
	<node name="Operator" pkg="nav2d_operator" type="operator" >
		<remap from="scan" to="base_scan"/>
		<rosparam file="$(find two_wheels_navigation)/param/operator.yaml"/>
		<rosparam file="$(find two_wheels_navigation)/param/costmap.yaml" ns="local_map" />
	</node>

	<!-- Load the environment map in the map_server -->
	<node name="MapServer" pkg="map_server" type="map_server" args="$(find two_wheels_navigation)/world/expo_cropped_map.yaml" />

	<!-- Start particle filter to track the robot's position -->
	<node name="SelfLocalizer" pkg="nav2d_localizer" type="localizer">
		<remap from="scan" to="base_scan"/>
		<param name="min_particles" type="int" value="400"/>
		<param name="max_particles" type="int" value="3500"/>
		<param name="min_translation" value="0.005"/>
		<param name="min_rotation" value="0.01"/>
	</node>

	<!-- Start the Navigator to move the robot autonomously -->
	<node name="Navigator" pkg="nav2d_navigator" type="navigator">
		<rosparam file="$(find two_wheels_navigation)/param/navigator.yaml"/>
	</node>
    
    <node name="GetMap" pkg="nav2d_navigator" type="get_map_client" />
    <node name="Explore" pkg="nav2d_navigator" type="explore_client" />
  	<node name="SetGoal" pkg="nav2d_navigator" type="set_goal_client" />

	<!-- Start the teleop_semiauto.py node-->
	<node name="teleop_semiauto" pkg="two_wheels_navigation" type="teleop_semiauto.py" output="screen" respawn="true"/>

	<!-- RVIZ to view the visualization -->
	<node name="RVIZ" pkg="rviz" type="rviz" args=" -d $(find two_wheels_navigation)/param/tutorial2.rviz" />

</launch>